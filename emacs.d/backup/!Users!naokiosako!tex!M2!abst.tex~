%% 以下の URL 記載の様式に合わせて作成 (2019/02/05)
%% https://ist.ksc.kwansei.ac.jp/~ishiura/iedu/2017/mt2017-abst.pdf

\documentclass[a4paper, 12pt]{jsarticle}

\setlength{\topmargin}{-20mm}
\setlength{\oddsidemargin}{-7mm}
\setlength{\textwidth}{146mm}
\setlength{\textheight}{260mm}


\begin{document}

\mcfamily                                  %% 全体を明朝体にする

{
  \centering
  \fontsize{12.045pt}{18.067pt}\selectfont %% MS Word の 12pt 相当
  2019 年度 修士論文要旨\\
}
\vspace{2pt}

{
  \centering
  \fontsize{16.060pt}{24.090pt}\selectfont %% MS Word の 16pt 相当
  \bfseries                                %% 太字
  電流兆候解析に基づくDCモーターのオンライン故障検知\\
}
\vspace{10pt}

{
  \centering
  \fontsize{12.045pt}{18.067pt}\selectfont %% MS Word の 12pt 相当
  \bfseries                                %% 太字
  関西学院大学大学院理工学研究科\\
  情報科学専攻 石浦研究室 大窄直樹\\
}
\vspace{20pt}


%% アブスト
  本論文では, DCモーターのオンライン故障検知を電流兆候解析により行う.
  モーターの保守運用は時間基準方式から状態保全方式に移行され, オンライン故障検知及び劣化に応じたハードウェア制御が求められている.
  電流兆候解析は, 個々のモーター関連設備にセンサーを設置することなく故障検知できるため実装及び管理のコストを削減できるが,
  故障検知の過程で周波数解析を行う必要があり, 計算量が多くオンライン化が困難という課題がある. この課題を解決するため本論文では,
  電流兆候解析をハードウェア併用することでオンライン故障検知を試みる.
  電流兆候解析の手法として, 故障したモーターの場合にはモーターに流れる電流の低周波数帯の高調波成分が増加することを利用して故障の検知を行う.
  実装はプログラマブルSoCで行い, 計算量の多い周波数解析をハードウェア実装し, 他の計算量の少ない処理をソフトウェア実装する.
  提案手法に基づき実験を行った結果, PWM信号のdutyを変更しても故障検知が可能で, 周波数解析を高速化することでオンライン故障検知が可能になった.

\end{document}



%%%% フォント埋め込みが必要な場合は以下のスクリプトで行える
%%
%% #!/bin/sh
%% filename=${1%.*}
%% infile=${filename}.pdf
%% outfile=${filename}_with_fonts.pdf
%%
%% # check input file
%% if [ ! -f ${infile} ]; then
%%     echo "Not found file '${infile}'"
%%     exit 1
%% fi
%%
%% # embed fonts
%% echo "Generating a pdf file with all fonts"
%% gs -q -dNOPAUSE -dBATCH -dPDFSETTINGS=/prepress -sDEVICE=pdfwrite -sOutputFile=${outfile} ${infile}
%%
%% # check enbedded fonts
%% count_no_font=$(pdffonts ${outfile} | \
%%                 perl -nE '@vs=split / {3,}/; say $vs[3]' | \
%%                 awk '{print $1}' | \
%%                 grep no | wc -l )
%%
%% if [ $count_no_font != 0 ]; then
%%     echo
%%     pdffonts ${outfile} | perl -pe 's/^/  /'
%%     echo
%%     echo "Found 'no' in column 'enb'"
%%     echo 'error'
%%     echo
%%     exit 1
%% fi
%%
%% # success message
%% echo "Generated successfully!"
%% echo "  ${infile} → ${outfile}"


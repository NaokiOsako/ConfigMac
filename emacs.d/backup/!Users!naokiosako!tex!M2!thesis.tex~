%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 石浦研究室 卒論・修論テンプレート 【門外不出】
% 2018-01-09: 卒論の表紙を変更
% 2017-11-28: 小規模更新
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\documentclass[11pt]{jbook}
\usepackage{ist-thesis}
\usepackage[dvipdfmx]{graphicx}
\usepackage{url}
\usepackage{dcolumn}
%% \usepackage{subfigure}
\usepackage{url}
\usepackage{listings}
%% \usepackage{nidanfloat}
\usepackage{caption}
\lstset{
  frame=single,
  breaklines = true,
  basicstyle=\small\ttfamily,
  numbers=left,
  numbersep=5pt,
  tabsize=1,
  extendedchars=true,
  xleftmargin=17pt,
  framexleftmargin=17pt,
  lineskip = -0.5ex
}



\thesistype{M}  % 修士論文の場合

\ID{8305} % 学籍番号 (下4桁)

\author{大窄 直樹} % 著者名
\supervisor{石浦 菜岐佐 教授} % 指導教員
\yearmonth{2020年3月} % 提出年月 (固定です)

% 表紙でタイトルを改行したい場合は \PAR を入れる (内容梗概で改行されない)
\title{電流兆候解析に基づく \PAR DCモーターのオンライン故障検知} % 邦題

% 英文のアブストラクトを書かない場合は下記は省略可能
%\eauthor{Taro Kwangaku} % 英著者名
%\etitle{English Title English Title\PAR English Title English Title} % 英題

\abstract{
  本論文では, DCモーターのオンライン故障検知を電流兆候解析により行う.
  モーターの保守運用は時間基準方式から状態保全方式に移行され, オンライン故障検知及び劣化に応じたハードウェア制御が求められている.
  電流兆候解析は, 個々のモーター関連設備にセンサーを設置することなく故障検知できるため実装及び管理のコストを削減できるが, 周波数解析の計算量が大きいという課題がある.
   本手法ではハードウェアの併用により, 電流兆候解析に基づくモーター故障検知のオンライン化を試みる.   故障検知は, 故障したモーターではモーターに流れる電流の低周波数帯の高調波成分が増加することを利用して行う.
  計算量の多いFFTをハードウェア実装し, 他の計算量の少ない処理をソフトウェア実装する.
  プログラマブル実装で実験を行った結果, PWM信号のduty比を変更しても故障検知が可能で, 周波数解析を高速化によりオンラインの故障検知が可能になった.
}
\keyword{電流兆候解析, 故障検知, ハードウェア設計}

\begin{document}

\coverpage

\tableofcontents

\body

\chapter{序論}
%% \cite{Tamura}

モーターは家電製品から鉄道, 電気自動車, 産業機器等多岐に渡る機器に内蔵されている.
これらの常時作動している設備用電気機器によって, 暮らしの安全や快適さがサポートされている.
モーターの故障は日常生活から社会活動にまで大きな影響を与えるため, それを未然に防ぐ対策が非常に重要になっている.

従来行われてきた故障への対策としては時間基準保全がある. 
しかし, 保全作業を行う時期は経験則に基づいており, 
実際に個々の電気機器に対してその時期が適切であるかどうかの判断は難しい.
交換のサイクルが短い場合にはコストが増大し, 長い場合には安全に対するリスクが高まる.
そこで近年では, 使用機器の日常的な診断により機器状態を推定する状態基準保全方式が採用されるようになって来ている.
モーターの寿命や故障の時期を詳細に予測し, これに基づいてて整備, 修理, 交換を行うことにより, 総合的なコストを削減することができる\cite{Tamura}.

モーターの点検は, 作業員の感覚に依存するため, 故障の判断が一意ではない. 
また, 多数のモーターを使用する設備では, 点検が容易でなく多大なコストがかかる.
これらの課題は, 作業員の感覚に頼った診断からシステム化された診断基準に統一化で解決できる.

機器の状態を推定する手法には振動解析, 温度解析, 電流兆候解析等がある\cite{Subhasis}.
振動解析, 温度解析は振動・温度データから診断するため, 振動・温度センサーをモーター関連設備に新たに取り付けるための導入・保守コストを必要とする\cite{yamamoto}.
電流兆候解析は, 個々のモーター関連設備に振動・温度センサーを設置する必要なく,
電気室にある制御盤内に設置された電流センサーによるセンシングデータをもとに遠隔で分析を行えるため, この手法が故障検知の主流になりつつある.

電流兆候解析は, 固定子と回転子のエアギャップの変化, 回転子の抵抗値の変化などが空間時速線に影響を与え,
逆起電力を通して固定子に流れる電流に反映しているという理論に基づいたもので, 回転子バーの破損, 回転子の静的/動的偏心などの故障を検知できる.
また, 検出信号に信号処理を施すことで, 回転子バーの故障, 軸受の故障などの故障も検知できる\cite{Toyota}.
しかし信号処理で行う周波数解析の計算量が多いため, 故障検知のオンライン化及び劣化に応じたモーター制御が困難という課題がある.
これに対し, 電流兆候解析のオンライン化に対する研究が行われている.

文献 \cite{Noureddine} は, 電流兆候解析によりモーターのローターバーの故障故障検知を行っている. 
文献 \cite{Sreedhar} は, ブラシレスDCモーターの電流兆候解析による故障検知を行っている.
しかし, これらの手法は電流兆候解析の処理の一部である周波数解析の計算量が多く, 時間を要するためオフラインでの実装である.
さらに, ブラシレスDCモーターの故障検知では, PWM信号のduty比を変更した故障検知を行なっていない.
また, 文献 \cite{Shubhasish} は, 電流兆候解析の高速化のためモーターの電流信号をハードウェアに送信しているが, オンライン故障検知を実装するまでには至っていない.

そこで, 本研究では電流兆候解析に基づくDCモーターのオンライン故障検知を試みる.
電流兆候解析の手法として, モーターに流れる電流の低周波数帯の高調波成分が, 故障したモーターの場合に増加することを利用して故障を検知する.
実装はプログラマブルSoCで行い, 計算量の多い周波数解析をハードウェア実装し, 他の計算量の少ない処理をソフトウェア実装する.

提案手法に基づき実験を行なった結果, PWM信号のduty比を変更しても故障検知が可能で, 周波数解析を高速化することでオンライン故障検知が可能になった.

\chapter{モーターの故障検知}
\section{DCモーターとその制御}
\subsection{モーターの種類}
モーターは, AC (Alternating Curren)モーターとDC (Direct Current)モータに大別することができる.

ACモーターは交流の電源で駆動し, 周波数に応じて一定の回転速度を保つことができる.
また, DCモーターと異なり構成部品にブラシが無いため, 耐久性のある装置の作成ができる.
しかし周波数に応じた一定の回転速度しか得られないため, 過負荷による停止, 周波数が高い, 起動しない等の場合には速度制御をする動作に向いていない.

DCモータは直流の電源で駆動し, 電圧に対しての回転特性が安定していて扱いやすく低価格である.
重ねて, 低電圧で動作するため装置の小型化に向いている.
しかし構造にブラシ, 整流子といった部品が含まれているためノイズや回転にムラがあるのと同時に壊れやすいといった課題がある.
また, DCモーターには, DCモーターからブラシを取り去ったブラシレスDCモーターがある.
ブラシがなくなったことにより耐久性が向上し, 電気的ノイズも小さくなった.

%% ブラシ付きDCモーターはブラシと整流子は接触があるため摩耗し壊れやすくなる.
%% また, 整流子の隙間にブラシ触れると, 強い火花発生しそれがノイズになる.
%% これらの原因であるブラシと整流子を取り除いたことにより, 耐久性が向上し, 向上電気的ノイズも小さくなった.

\subsection{モーターの構造と故障}
ブラシ付きDCモーターの構造を図\ref{rune}に示す.
整流子とブラシが, DCモータの特徴となる部品である.
整流子はコイルに流れる電流の向きを切り替え, 磁極の向きを逆転させることにより回転子は右回転する.
軸とともに回転する整流子にはブラシから電力が供給されている.
整流子がブラシと当たって給電し, 整流子とブラシが回転により触れる箇所が変更することで電流の向きが変わる.
コイルは磁界の中に置かれ, 流れる電流によりコイルが片方の磁極に反発し, 同時に反対側が別の磁極に引かれることで回転する.
 
モーターの主な故障は下記の4つに分類できる\cite{Subhasis}.
\begin{enumerate}
\item 軸受の故障 \par
軸受の故障は, 雑音, 振動の増大を引き起こす. モーターの故障の40--50\%を占める.
\item 固定子, 電機子の故障 \par
  固定子, 電機子の故障は絶縁故障を引き起こす. モーターの故障の30--40\%を占める.
\item 回転子の故障 \par
回転子の故障は平均トルクの減少及び, ホットスポットの生成を引き起こす. モーターの故障の5--10\%を占める.
\item 静的／動的な偏心 \par
偏心は固定子と回転子間の摩擦の原因となり, 固定子, 回転子の故障を引き起こす. 
\end{enumerate}


\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=60mm]{rune.png}
  \end{center}
  \caption{DCモーターの構造 \cite{rune}}
  \label{rune}
\end{figure}


\subsection{PWM制御}
電圧を上下させてモータの速度を変える従来の方式では, 
電圧の強さを変えるための回路が必要となる上, 
電圧の上昇/下降により発熱するためエネルギー効率が悪い.

この課題を解決するために, 最近ではパルス幅のduty比を変更することによりモーターを制御するPWM (Pulse Width Modulation) 信号が用いられる.

図\ref{pwm}は, PWM信号の例である. 上からduty比が25\%, 50\%, 75\%の信号である.
周期のhighの割合をduty比という.
この比率を変えることにより, モータに供給する実効電圧を変えモータの回転数を制御する.

\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=140mm]{pwm.png}
  \end{center}
  \caption{PWM 信号}
  \label{pwm}
\end{figure}
\section{モーターの故障検知}

\subsection{故障検知の手法}
故障検知手法には下記のような方法がある\cite{Subhasis}.
\begin{enumerate}
\item 電磁場解析  \par
 固定子, 回転子間の電磁場を解析することにより故障検知を行う.
\item 温度解析    \par
モーターの駆動時のコイルの温度変化を解析することにより故障検知を行う.
\item 振動解析    \par
モーター振動を解析し, 抽出した特徴に基づいて故障検知を行う.
\item 音響解析    \par
駆動時の異常音や突発的に発生する異音から故障検知を行う.
\item 電流兆候解析\par
駆動時の電流信号の変化から故障検知を行う.
\end{enumerate}

この中で故障検知において, 低コスト, 高精度という点から近年注目されているのが電流兆候解析である.
電流兆候解析は, 固定子と回転子のエアギャップの変化,回転子の抵抗値の変化などが空間時速線に影響を与え,
逆起電力を通して固定子に流れる電流に反映しているという理論に基づいたものである \cite{Toyota}.
電気室にある制御盤内に設置された電流センサーによるセンシングデータをもとに遠隔で分析を行えるため, 初期コストが低いという長所がある.
回転子, 固定子, 静的/動的偏心等の故障等の故障を検知することができる.
また, 検出信号に信号処理を施すことにより, 回転子バーの故障, 軸受の故障等も検知できる.
AC モーター, サーボモーター, ブラシレスDCモーター等広い範囲に適用され効果をあげている.

しかしDCモータでは, PWM信号のduty比の変化を考慮した故障検知は行われていない.
また, 信号処理で周波数解析の処理に時間がかかるためオンライン故障検知が困難という課題がある.

\subsection{DC モーターの故障検知}
文献 \cite{Shubhasish} では, 電流兆候解析に基づいてブラシレスDCモーターのオフライン故障検知を行っている.
対象とする故障は歯車の歯こぼれで, 歯が1つ欠けた故障及び, 歯が2つ欠けた故障を対象にしている.
正常なモーターと故障したモーターの電流信号に与える影響調べるため比較実験を行う.
それぞれで電流信号の周波数解析を行い周波数表現にし, そのデータからパワースペクトルを生成する.

低周波数帯 (0-50Hz) の最大高周波数成分を取得する実験を行った結果を表 \ref{bldc} に示す.
``Amplitude'' は最大周波数成分, ``Frequency''は最大周波数成分の周波数, ``\% Change In Amplitude''は正常なモーターの最大周波数成分に対して故障したモーターの最大周波数成分の増加割合である.
``Health'' は正常なモーター, ``G1 fault'' はG1のモーター, ``G2 fault'' はG2のモーターである.
故障したモーターは正常なものと比べ最大周波数成分が高いことから, これを利用して故障検知ができる.

しかし, この研究ではduty比を変化させた故障検知及びオンライン故障検知を行っていない.
\begin{table}[htbp]
  \begin{center}
    \begin{footnotesize}
      \caption{周波数解析結果 \cite{Shubhasish}}
      \label{bldc}
      \begin{tabular}{|l|r|r|r|}
        \hline
        \multicolumn{1}{|c|}{Peak}& \multicolumn{1}{|c|}{Health}& \multicolumn{1}{|c|}{G1 fault}& \multicolumn{1}{|c|}{G2 fault}\\ \hline
        Amplitude            & 28.50 & 33.47 & 86.18 \\
        Frequency (Hz)         & 16.97&   16.97  & 16.97 \\  
        \% change in amplitude    & 0 & +17.44 & +202.38 \\   \hline
      \end{tabular}
    \end{footnotesize}
  \end{center}
\end{table}


\chapter{予備実験}
電流兆候解析によりブラシ付きDCモーターの故障検知を行うため, 故障したブラシ付きDCモーターの周波数成分の特徴を調べる予備実験を行った.
文献 \cite{Shubhasish}のブラシレスDCモーターの故障検知では, モーターが故障した場合に低周波数帯の最高周波数成分に影響が現れたが, 
ブラシ付きDCモーターの場合にどのような変化が生じるかも調べた. 
また, ブラシ付きDCモーターのPWM信号のduty比による最高周波数成分の変化についても調べた.

\section{DCモーターの周波数成分}
\subsection{周波数成分の取得}
文献 \cite{Shubhasish}のブラシレスDCモーターの故障検知ではブラシレスDCモーターが故障した場合, 電流信号データの低周波数帯の高調波成分影響を与えた.
そこで, DCモーターの場合には周波数成分にどのような影響を与えるのか調べた.

周波数成分の取得は図\ref{yobizi}の構成で行った.
矢印の向きは電流の向きである.
実験に用いたDCモーターは小型直流モーターのマブチモーターRS-380PHである.
DCモーターを制御するためにモーターコントローラーボードであるMXA033を用いた.
電流信号の解析に利用するスペクトラムアナライザにはAnalog Discovery2を用いた.

DCモーターには正常なモーターを1個, 故障したモーターを1個を用いた.
故障したDCモーターには, あらかじめ過電流・過電圧で一定時間駆動させることにより故障させたものを用いた.
周波数成分のサンプル数は512点, DCモーターのduty比は50\%, 周波数帯は0-500Hzのデータを取得した.

\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=100mm]{yobizi.png}
  \end{center}
  \caption{周波数成分の取得}
  \label{yobizi}
\end{figure}

\subsection{DCモーターの周波数成分}
図 \ref{power}は取得した周波数成分をパワースペクトルにしたものである.
(a)が正常なモーター, (b)が故障したモーターのものである, 縦軸はパワーで単位はV, 横軸は周波数で単位はHzである.
正常なモーター, 故障したモーターともに最大周波数成分は約100Hzに位置していて, 
正常なモーターの最大周波数成分が約0.65Vで, 故障したモーターの最大周波数成分は約0.98Vであった.

この実験により, ブラシ付きDCモーターでも文献\cite{Shubhasish}と同様に故障により低周波数帯の最大周波数成分が増加することが確認できた.
したがって, 正常なモーターと故障したモーターは低周波数帯の最高周波数成分の大きさにより判別できると考えられる.

\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=100mm]{power.png}
  \end{center}
  \caption{DCモーターのパワースペクトル}
  \label{power}
\end{figure}


\section{PWM信号と周波数成分の関係}
PWM信号を変化をさせることにより, 低周波数帯の最大周波数成分にどのような影響を与えるかを調べた.

DCモーターを正常なモーター10個, 故障したモーター5個の合計15個について, 
PWM信号のduty比が25\%, 50\%, 75\% の場合の最高周波数成分を調べた.
正常なモーターは各モーターと 各duty比に対して最大周波数成分を5回取得し, 故障したモーターは最大周波数成分を10回取得した.
すなわち, 正常なモーター及び故障したモーターの最大周波数成分を50個取得した.

取得したduty比ごとの最大周波数成分を図 \ref{seiki}, 図 \ref{hakohige}に示す.

図 \ref{seiki}は離散確率分布図で, 横軸が最大周波数成分での単位はdbV, 縦軸は確率での単位は\%である.
オレンジが正常なモーターの最大周波数成分, 青が故障したモーターの最大周波数成分である.
duty比は図の上から25\%, 50\%, 75\%である. 
正常なモータの最大周波数成分は, 故障したモーターの最大周波数成分と比べ低い値を示している.
例えばduty比が50\%の時, 正常なモーターの最大周波数成分は約$-6.0$dbVから$-7.8$dbVの間に集中しているのに対し,
故障したモーター最大周波数成分は約$-0.5$dbVから$-5.0$dbVに集中していた.

故障したモーターの最大周波数成分が正常なものと比べ大きい関係は, duty比が 25\%, 50\%, 75\%のとき全てで成り立っている.
そのため, duty比が変化しても低周波数帯の最高周波数成分を調べることにより故障を検出できると考えられる.

また, 図 \ref{seiki}からduty比が小さいほど, 正常時及び, 故障時ともに最高周波数成分が増加することがわかった.

\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=120mm]{saidai.png}
  \end{center}
  \caption{最大周波数成分の離散確率分布図}
  \label{seiki}
  
\end{figure}
図 \ref{hakohige}は箱ひげ図で, 縦軸は最大周波数成分で単位はdbVである.
オレンジが正常なモーターの最大周波数成分, 青が故障したモーターの最大周波数成分である.
duty比は図の上から25\%, 50\%, 75\%である. 
duty比 の増加に対し故障したモーターの最大周波数成分の四分位範囲が大きくなっている.

これより, duty比が大きいほど, 故障の影響が大きくなることがわかった.


\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=80mm]{hakohige.png}
  \end{center}
  \caption{最大周波数成分の箱ひげ図}
  \label{hakohige}
\end{figure}


\chapter{オンライン故障検知のプログラマブルSoCによる実装}
\section{オンライン故障検知の方式}
本論文では電流兆候解析に基づくDCモーターのオンライン故障検知を行う.

従来電流兆候解析の処理の周波数解析で用いられるフーリエ変換の処理の計算量が多くボトルネックとなってるため, オンライン故障検知ができなかった.
そこで提案手法では, フーリエ変換のハードウェア化を行うことで電流兆候解析のオンライン故障検知を試みる.

故障検知は, 故障したモーターではモーターに流れる電流の低周波数帯の高調波成分が増加することを利用して行う.
フーリエ変換のハードウェア実装は高速化な固定小数点高速フーリエ変換 (固定小数点FFT) を用いる.
PWM信号が変更する故障検知では, duty比と最高周波数成分の関係を利用して故障を検知する.

フーリエ変換の処理はハードウェア化するが, 他の計算量の少ない処理であるデータ取得, データの前処理, スペクトラム解析をソフトウェアで行う.
まず, ソフトウェアでモーターから電流信号を取得し, ハードウェアで効率的に計算させるためにデータの固定小数点化を行う.
次に, ハードウェアで固定小数点FFTを行う.
最後に, 得られた周波数からスペクトル解析を行うことにより故障検知を行う.

提案手法による実装を図\ref{zyungai}に示す.
計算量の多いフーリエ変換の処理をハードウェア化し, 他の計算量の少ない処理であるデータ取得, データの前処理, スペクトラム解析をソフトウェアで行う.
まず, ソフトウェアでモーターから電流信号を取得し, ハードウェアで効率的に計算させるためにデータの固定小数点化を行う.
次に, ハードウェアで固定小数点FFTを行う.
最後に, 得られた周波数からスペクトル解析を行うことで故障検知を行う.

\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=100mm]{zyungai.png}
  \end{center}
  \caption{電流兆候解析のオンライン故障検知}
  \label{zyungai}
\end{figure}

\section{プログラマブルSoC}
本論文ではプログラマブルSoCを用いて実装を行う.
プログラマブル SoC とは, ハードマクロのプロセッサとFPGA を 1 チップ上に搭載した SoC のことである. 特徴として, 
プロセッサと FPGA の接続がチップ上に実装されるため, 両者の高速な通信が可能であることが挙げられる\cite{Azuma}.
ハイエンドの組込みシステムを対象としたプログラマブル SoC であるZynq-7000は, プロセッシングシステム (PS) およびプログラマブル
ロジック (PL) の 2 つで構成されている. 前者はデュアルコアの ARM Cortex-A9 プロセッサを中心として, キャッシュ, オンチップメモリ, 
外部メモリインタフェース, DMAコントローラ, および, 入出力ペリフェラルで構成されている. 
後者は構成可能論理ブロック, RAM, ディジタル信号処理ブロック, プログラマブル入出力ブロック, シリアルトランシーバ, および, A-D コンバータで構成されて
いる. PS の ARM Cortex-A9 プロセッサの最大動作周波数は 600MHz から 1GHz となっている. これは, FPGA上にソフトコアとしてプロセッサを合成した場合のものと
比べて, 数倍高速なものとなっている. また, PS と PLは複数層の ARM AMBA（Advanced Microcontroller Bus Architecture）AXI（Advanced eXtensible Interface）を使
用して接続されており, 両者間の高速な通信を可能にしている. 

プログラマブルSoCにZYBO Zynq-7000 Development Boardを用いて実装を行う.
ZYBO Zynq-7000 Development BoardはZynqを搭載した評価ボードである.
Zynq は, FPGAとプロセッサを搭載したXilinx社のIC チップ製品群の総称であり, CPU をベースとした PS (Processing System)
と従来のFPGA に相当するPL (Programmable Logic) が一つのチップの中に入っている \cite{onishi}.
そのため, Zynq を用いることによっFPGA によるハードウェア開発だけでなくプロセッサを用いたソフトウェア開発や
既存のソフトウェア資源の活用が可能となる.
また, PS部とPL部はチップ内部で接続されているため, PS部とPL部間での高速なデータ転送を行うことができる.

XillinuxはXillybus社がリリースしたUbuntu 12.04LTSに基づくLinuxディストリビューションである.
ZynqにXillinuxを導入することで, Linuxを動作及び, Xillybusを用いてPS-PL間の通信を実現できる.

\section{実装}
\subsection{概要}
本論文ではプログラマブルSoCを用いて電流兆候解析のオンライン故障検知を行った.
またLinuxを動作及び, PS-PL間との通信を実現のためにOSにXillinuxを用いた.
システムの全体像を図\ref{gaiyou}に示す.
プログラマブルSoCにはZYBO Zynq-7000 Development Boardを用いた.
本手法では, 駆動しているモーターから電流信号を取得した.
その後取得した電流信号を加工しデバイスドライバを通してPL部にデータを送った.
データの送信が終わり次第, PS部からPL部にデータの送信終了信号をデバイスドライバを通して送りPL部分で512点の固定小数点FFTを行った.
その後, PS部からPL部のデータを取得しスペクトル解析を行うことでモーターの劣化及び故障を検出した.

\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=80mm]{gaiyou.png}
  \end{center}
  \caption{プログラマブルSoCを用いた実装}
  \label{gaiyou}
\end{figure}

\newpage

\subsection{信号の取得}
モーターからの電流信号は, Analog Discovery2を用いて取得した.
Analog Discovery2は専用ソフトであるWaveformsを用いてJavaScriptで制御を行うことができる.
Analog Discovery2のオシロスコープは12Mbpsを超える速度でデータを取得できる.
Waveformsでオシロスコープのサンプリング時間を500ms, サンプリング数を512点に設定した.
その後, 図\ref{ana}のプログラムを実行することでオンラインに電圧を取得できた.

\begin{figure}[htbp]
  \begin{lstlisting}
    while (true) {
        var data=Scope1.Channel1.data
        File("~/data.txt").write(data)
    }
  \end{lstlisting}
  \caption{オシロスコープの制御プログラム}
  \label{ana}
\end{figure}


\subsection{データの固定小数点化}
計算速度と消費電力の観点から, 取得した電圧データは固定小数点化した.
具体的には, 浮動小数点データを100倍して小数点以下を切り捨てた.
この処理はPS部で行った.

固定小数点化の具体例を図\ref{kotei}に示す.
図の左がモーターから取得した電圧データ, 右がデータを加工して固定小数点化したデータである.
例えば 0.9938883564469071の場合, 100倍すると99.38883564469071になり小数点以下を切り捨てることで99となることで固定小数点になる.

\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=120mm]{kotei.png}
  \end{center}
  \caption{データの固定小数点化}
  \label{kotei}
\end{figure}


\subsection{ソフトウェアとハードウェア間の通信}
XillinuxではPS部とPL部の通信を高速に行うためのデバイスドライバが提供されている.
書き込み用のドライバドライバであるxillybus\_write\_32を用いてPL部にデータの書き込みを行った.
また, 読み込み用のドライバドライバであるxillybus\_read\_32を用いてPL部のデータの読み込みを行った.

\subsection{FFTのハードウェア実装}
FFT のハードウェア実装はハードウェア設計言語VHDLを用いて行った.
FFTは512点の固定小数点高速フーリエ変換を実装した.
PS部とPL部でデータの読み書きを行うため, PL部に入力のFIFOと出力のFIFOの合計2個のFIFOを設置した.
また, PL部の制御のためにデバイスドライバを作成した.

PL部でのFFT実装を下記のような流れで行った.
まず, PS部から固定小数点の電圧データをPL部に書き込む.
書き込み終了後, PS部からデバイスドライバを通して計算開始の制御信号を送信する.
制御信号を受け取ったらFFTの処理を始め, 計算結果を出力用FIFOにデータを格納する.

この動作は 4,656 cycle 処理でき, LUT は 17,600 である.
動作周波数を100MHzとすると 46.5μ s で実行できる
PWM信号のスイッチング周波数には1--5kHzが用いられることが多く, その周期は200--1,000μsであるため, これは十分にオンライン故障検知可能な範囲である.
LUT数は 17,600 であり, PL部に収容可能な規模である.

\subsection{周波数解析}
スペクトル解析では, PL部受け取った周波数スペクトルを二乗しパワースペクトルに変換する.
その後, パワースペクトルの値のうちもっとも大きい値, すなわち最大周波数成分を求める.
また, 元の電圧信号からduty比を求める.
これは電圧信号512点のうち, 0.01Vより大きい値の割合を計算することにより求める.
この二つの特徴量, 最大周波数とduty比からモーターの劣化及び故障を検出の行なった.

\section{実験結果}
\subsection{負荷を与えていないモーターでの実験結果}
本実装で正常なモーター1個と故障したモーター1個それぞれでデータを100個取得した.
duty比変更時でも故障検知できるか確かめるために, それぞれのデータの取得間隔を1秒としduty比を変更させながらデータを取得した.
取得したデータを表したものが図\ref{sanp} である.
縦軸が最大周波数で単位は$V^2$, 横軸はduty比で単位は\%である.
オレンジの点が正常なモーターから取得したデータ, 青の点が故障したデータである.
また正常なモーター, 故障したモーターのデータを最小二乗法により線形予測したものがオレンジの直線, 青の直線である.

故障したモーターの最大周波数成分は, 正常なものと比べ, 任意のduty比においてほとんどのデータが大きなものとなっている.
また, 線形予測の直線により, 両方のモーター共にduty比の増加に伴い最大周波数成分が小さくなった.

これらの結果から, 
故障したモーターの線形予測を下回っていたら正常, 上回っていたら故障とすることで故障検知を行うことができる.
\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=160mm]{sanp.png}
  \end{center}
  \caption{負荷を与えていないモーター実験結果}
  \label{sanp}
\end{figure}
\newpage

\subsection{負荷を与えたモーターでの実験結果}
負荷を与えた状態で正常なモーターと故障したモーターそれぞれでデータを100個取得した.
モーターに一定の負荷を与えるため, 計測用モーターとは別のモーターを負荷用モーターを準備した.
計策用モーターと負荷用モーターのシャフト同士を接着し, 負荷用モーターを計測用モーターに対して逆回転させることにより一定の負荷を与えた.

負荷を与えた状態で計測を行い取得した結果を図\ref{sanp_load} に示す.

正常なモーターは負荷ありの場合と負荷なしの場合で大きな変化が見られないのに対し,
故障したモーターは大きな変化があった.
故障したモーターは負荷を与えることにより最大周波数成分が低くなった.
その結果, 本手法で故障検知を行う場合, 正常なモーターと故障したモーターともに正常なモーターと判断される.
故障したモーターの最大周波数成分が減少した理由は, 故障が原因で発生するトルクが減少し, 外部からの負荷が弱いためだと考える.

これらの結果から, モーターに負荷を与えた状態では故障を検出することができない.
\begin{figure}[htbp]
  \begin{center}
    \includegraphics[width=160mm]{sanp_load.png}
  \end{center}
  \caption{負荷を与えたモーターの実験結果}
  \label{sanp_load}
\end{figure}

\section{考察}
提案手法により, 電流兆候解析に基づくDCモーターのオンライン故障検知を実現できた.

データ取得, データの前処理, スペクトラム解析の計算量が $O(N)$なのに対し, FFTの計算量は$O(N\log N)$でボトルネックとなっていた.
そこで, FFT をハードウェア実装を行い高速化するとこにより故障検知のオンライン化を行った.

本研究では, 負荷を与えていないモーターと負荷を与えたモーターで電流兆候解析による故障検知を行った.
負荷を与えていないモーターで行った実験では,
故障したモーターと正常なモーターでduty比に応じた最大周波数に有意な差があった.
モーターの最大周波成分は故障が増加するほど, 最大周波数成分もまた増加する.
これは, モーターがどの程度劣化しているかの目安になり, ある一定の値より大きくなることで故障と判断することができる.
またモーターに負荷を与えて計測した場合, 正常なモーターにはほとんど影響を与えないが,
故障したモーターには影響を与え最大周波数成分が小さくなった.
その結果, 本手法で故障検知を行う場合, 正常なモーターと故障したモーターともに正常なモーターと判断される.
故障したモーターの最大周波数成分が減少した理由は, 故障が原因でトルク小さく外部からの負荷が弱いためだと考える.


\chapter{結論}
本論文では, 電流兆候解析に基づくDCモーターのオンライン故障検知の一手法を提案した.
故障したモーターの場合にはモーターに流れる電流の低周波数帯の高調波成分が増加することを利用して故障の検知を行った.
実装はプログラマブルSoCで行い, 計算量の多い周波数解析をハードウェア実装し, 他の計算量の少ない処理をソフトウェア実装した.
提案手法に基づき実験を行った結果, PWM信号のduty比を変更しても故障検知が可能で, 周波数解析を高速化することによりオンライン故障検知が可能になった.

本手法では, 一定時間過電圧・過電流で駆動させたモーターを故障したモーターと定義して故障検知できることを確認したが, 他の故障も検知できる可能性がある.

今後の課題は, 負荷を与えたモーターでの故障検知, 及び劣化を抑制するようなモーター制御が重要な課題となる.
\acknowledgement

本研究に際し, 多くの方々から御助言, 御助力を賜りました. ここに感謝の意を表します.
本研究の機会を与えていただき, 数々の御助言, 御指導を賜りました石浦菜岐佐教授に心より感
謝いたします.
本研究に関する有益な議論の場を提供していただき, 様々な視点から御指導いただきました京都
高度技術研究所の神原弘之氏に感謝いたします. 本分野について深い知見をもち, 多くの御助言,
御指導いただきました立命館大学の冨山宏之教授に感謝いたします. 技術的な面で多くの御助言
をいただきました元立命館大学の中谷嵩人氏に感謝いたします.
本研究に関して御協力, 御討議頂いた関西学院大学石浦研究室 HLS チームの諸氏に深く
感謝いたします. 研究にかぎらず私生活の面でも多くの御支援を賜りました石浦研究室の諸氏に
感謝いたします.

\chapter*{関連発表文献}

% - 発表日の *新しい順* にして下さい (最近の発表が一番前で, 昔の発表が後ろ)
% - 論文自体の書式は参考文献と同じ

\begin{enumerate}
  
\item 大窄直樹, 石浦菜岐佐, 神原弘之:
  ``電流兆候解析に基づくDCモーターのオンライン故障検知,''
  電子情報通信学会技術研究報告, (Mar.~2020 to appear).

\item N. Osako, S. Ota, S. Yura and N. Ishiura:
  ``High-level synthesis of side channel attack resistant RSA decryption circuit''
  in \textit{Proc.\ Workshop on Synthesis And System Integration of Mixed Information technologies (SASIMI 2018)}, pp.~159--160 (Mar.\ 2018).

\item 大窄直樹, 石浦菜岐佐: 
  ``モンゴメリ法及び並列化を適用した耐サイドチャネル攻撃RSA復号回路の高位合成,''
  電子情報通信学会ソサイエティ大会, A-7-1 (Sept.\ 2017).
  
\end{enumerate}




\begin{thebibliography}{9}
\bibitem{Tamura}
  田邨優人, 高井勇志, 加藤丈和, 松山隆司:
  ``電流波形パターン解析に基づく電気機器の異常検出・劣化診断,''
  in \textit{Proc. the Institute of Electronics, Information and Communication Engineers (IEICE 2013)}, pp.~135--140 (Nov.~2013).

  
\bibitem{Subhasis}
  %% Subhasis Nandi, Hamid A. Toliyat, and Xiaodong Li:
  S. Nandi, H. A. Toliyat, and X. Li:
  ``Condition monitoring and fault diagnosis of electrical Motors-A review,''
  \textit{IEEE Transactions on Energy Conversion}, vol.~20, no.~4, pp.~719--729 (Dec.~2005).

\bibitem{yamamoto}
  山本豊樹,  和田和実, 鹿子愼太郎, 樋口暁:
  製鉄設備における診断技術の現状と今後 (online),
  日鉄住金技報第402号 (2015), 
  \url{https://www.nipponsteel.com/tech/report/nssmc/pdf/402-02.pdf}
  (accessed 2020-01-08).

\bibitem{Toyota}
 豊田 利夫:
  電流兆候解析 MCSA による電動機駆動回転機の診断技術 (online),
  \url{https://www.takada.co.jp/~takada-co-jp/giho/pdf/gihou20/kikou_1.pdf} 
  (accessed 2019-08-27).

\bibitem{Noureddine}
  %% Noureddine Bessous, Salim Sbaa, Abida Toumi
    N. Bessous, S. Sbaa and A. Toumi:
  ``A detailed study of the spectral content in the stator current of asynchronous machines under broken rotor bar faults using MCSA technique,''
  in \textit{Proc.\ 2018 6th International Conference on Control Engineering \& Information Technology (CEIT 2018)} (July~2018).

\bibitem{Sreedhar}
  G. Sreedhar Babu, A. Lingamurthy, and A. Seshadri Sekhar:
  ``Condition monitoring of brushless DC motor-based electromechanical linear actuators using motor current signature analysis,''
  \textit{International Journal of Condition Monitoring}, vol.~1, no.~1, pp.~20--32 (June~2011).

\bibitem{Shubhasish}
  %% Shubhasish Sarkar, Pranab Kumar Hembram, Prithwiraj Purkait, and Santanu Das:
  S. Sarkar, P. Kumar Hembram, P. Purkait, and S. Das:
  ``Acquisition and pre-processing of three phase induction motor stator current signal for fault diagnosis using FPGA, NI Compact-RIO Real Time Controller,''
  in \textit{Proc. Uttar Pradesh Section International Conference on Electrical, Computer and Electronics Engineering (UPCON 2016)}, pp.~110--114 (Dec.~2016).

  

\bibitem{rune}
  Renesas Electronics Corporation:
  BLDCモータとは？ (online),
  \url{https://www.renesas.com/jp/ja/support/technical-resources/engineer-school/brushless-dc-motor-01-overview.html} (accessed 2020-01-15).


\bibitem{Azuma}
  東遼平, 高瀬英希, 高木一義, 高木直史:
  ``プログラマブルSoCのためのシステム設計環境の検討とSW-HWインタフェース生成手法の実装,''
  情報処理学会研究報告, 2014-SLDM-164 (Jan.~2014).

\bibitem{onishi}
  大西 裕二:
  ``プロセッサ搭載FPGAによる新しいデータ取得システムの開発,''
  大阪大学大学院理学研究科物理学専攻修士論文 (Feb.~2019).
  
  
%% \bibitem{Aditya}
%%   Aditya Korde B. E.:
%%   ``On-line condition monitring of motors using electrical signature analysis,'' (online), 
%%   \url{http://www.powersight.com/FILES/APPLICATION_NOTES/Online\%20Condition\%20Monitoring\%20of\%20Motors.pdf}
%%   (accessed 2019-08-27).

\end{thebibliography}



%\appendix
%
%付録はこのように，\verb+\appendix +コマンドを用いて書く. 
%付録が複数あり「付録A」「付録B」などとしたい場合は，
%\begin{quote}
%\verb+\appendix[A]+\\
%\verb+\appendix[B]+
%\end{quote}
%などとすればよい．

\end{document}



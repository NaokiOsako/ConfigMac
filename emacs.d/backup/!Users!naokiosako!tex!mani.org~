

#+STARTUP: showall
#+LATEX_HEADER: \renewcommand \maketitle{}
# #+TITLE: 
# # #+AUTHOR: 信学ソ大
# #+DATE: \today

#+LANGUAGE: ja
#+OPTIONS: toc:nil timestamp:nil creator:nil f:nil ^:{}
#+LATEX_CLASS: jsarticle
#+LATEX_CLASS_OPTIONS: [column, 10.5pt]
#+LATEX_HEADER: \usepackage{boites}

# ---------- package setting ----------
#+LATEX_HEADER: \usepackage{txfonts}
#+LATEX_HEADER: \usepackage{bm}
#+LATEX_HEADER: \usepackage{boxedminipage}
#+LATEX_HEADER: \usepackage{multicol}
#+LATEX_HEADER: \usepackage[dvipdfmx]{graphicx}

# ---------- margin setting ----------
#+LATEX_HEADER: \setlength{\topmargin}{-15mm}
#+LATEX_HEADER: \setlength{\oddsidemargin}{-4mm}
#+LATEX_HEADER: \setlength{\textwidth}{170mm}
#+LATEX_HEADER: \setlength{\textheight}{257mm}
#+LATEX_HEADER: \setlength{\columnsep}{7mm}
# #+LATEX:\renewcommand{\baselinestretch}{0.9}
# #+LATEX:\renewcommand{\arraystretch}{1.0}

#+LATEX: \makeatletter
#+LATEX: \def\@trivlist{\topsep 2pt \parsep 2pt plus \parskip \partopsep 0pt
#+LATEX: \itemsep 0pt \@topsepadd\topsep \if@noskipsec \leavevmode \fi
#+LATEX: \ifvmode \advance\@topsepadd\partopsep \else \unskip\par\fi
#+LATEX: \if@inlabel \@noparitemtrue \@noparlisttrue \else \@noparlistfalse
#+LATEX: \@topsep\@topsepadd \fi \advance\@topsep \parskip
#+LATEX: \leftskip\z@\rightskip\@rightskip \parfillskip\@flushglue
#+LATEX: \@setpar{\if@newlist\else{\@@par}\fi}%
#+LATEX: \global\@newlisttrue \@outerparskip\parskip}
#+LATEX: \def\section{\@startsection{section}{1}{\z@}%
#+LATEX: {1.75ex plus 0.5ex minus .2ex}{0.75ex plus .2ex}{\normalsize\bf}}
#+LATEX: \def\subsection{\@startsection{subsection}{2}{\z@}%
#+LATEX: {1.5ex plus 0.5ex minus .2ex}{0.5ex plus .2ex}{\normalsize\bf}}
#+LATEX: \def\subsection{\@startsection{subsection}{3}{\z@}%
#+LATEX:{1.0ex plus 0.5ex minus .2ex}{0.5ex plus .2ex}{\normalsize\bf}}

#+LATEX:\makeatother
\pagestyle{empty}



\begin{flushleft}

\textbf{信学ソ大 大窄直樹}
\end{flushleft}
\begin{flushright}
最終更新 \today\par

\end{flushright}

* \bf タイトル案 \mc
# 電力解析攻撃および故障利用攻撃に耐性を持つRSA復号回路の高位合成(おおたさん)

  * 電力解析攻撃及び故障利用攻撃に耐性を持つRSA復号回路の高位合成と効率化
  * Fournarisのアルゴリズムに基づく耐サイドチャネル攻撃RSA復号回路の高位合成と効率化
    
    
* \bf 著者 \mc
  * 大窄直樹 (Naoki Osako), 石浦菜岐佐 (Nagisa Ishiura), 神原弘之 (Hiroyuki Kanbara)
    
* \bf 研究の位置づけ (1. 背景; 2. それに対する取り組み; 3. 課題; 4. 本研究) \mc


  \quad 1. IoT向け組込みシステムが増加するにつれ, 暗号のサイドチャネル攻撃の対策をどのようにするか考える必要がある. \par
  \quad 2. [太田2016]は, Fournarisのアルゴリズムに基づき, サイドチャネル攻撃に耐性を持つ\par
  \quad   \quad RSA暗号の復号回路を高位合成により設計する手法を提案.\par
  \quad 3. サイドチャネル攻撃に耐性を持たせることによりRSA暗号の復号回路は, 回路規模, 実行時間が大幅に増加した.\par
  \quad 4. サイドチャネル攻撃に耐性を持つRSA暗号の復号回路の高速化及び回路規模の削減方法を提案.\par
\quad\quad  - モンゴメリリダクションを利用することにより剰余算の削除が可能になり, 回路規模の削減ができる. \par
\quad\quad  - 並列化することにより実行時間を短くすることができる.

* \bf 結果 \mc
  
    # \begin{table}[htbp]
    #   \begin{center}
    #      \caption{シミュレーション結果 keybit 128; (kintex7 XC7K70T)}
    #      \begin{tabular}{|c|c|c|c|c|c|}
    #        \hline
    #        &code&resisters&LUTs & Delay & cycles(復号化)\\ \hline
    #        変更前 &MIPS&1,771 &3,180 &  &3,554,185\\ 
    #        &HW& 2,356 & 16,801 & &627,615 \\  \hline
    #        変更後&MIPS &1,771 &3,180 &  &4,183,457\\ 
    #        &HW & 2,662 & 11,464 & &683,405 \\   \hline
    #      \end{tabular}
    #    \end{center}
    #  \end{table}
    # \begin{table}[htbp]
    #   \begin{center}
    #      \caption{cycles結果 keybit 128; (kintex7 XC7K70T)}
    #      \begin{tabular}{|c|c|c|}
    #        \hline
    #               & code & cycles(復号化)\\ \hline
    #        変更前 & MIPS & 3,554,185\\ 
    #               & HW   & 627,615 \\  \hline
    #        変更後 & MIPS & 4,183,457\\ 
    #               & HW   & 683,405 \\   \hline
    #      \end{tabular}
    #    \end{center}
    #  \end{table}


    # \begin{table}[htbp]
    #   \begin{center}
    #      \caption{回路規模結果; (kintex7 XC7K70T)}
    #      \begin{tabular}{|c|c|c|c|c|}
    #        \hline
    #        &code&resisters&LUTs & Delay \\ \hline
    #        &MIPS&1,771 &3,180 &  10.473\\ \hline
    #        変更前&HW& 2,356 & 16,801 & 12.907\\  \hline
    #        変更後&HW & 2,662 & 11,464 & \\   \hline
    #      \end{tabular}
    #    \end{center}
    #  \end{table}

     \begin{table}[htbp]
      \begin{center}
         \caption{回路規模結果; (kintex7 XC7K70T)}
         \begin{tabular}{|c|l|r|r|r|r|}
           \hline
  \multicolumn{1}{|c|}{}&  \multicolumn{1}{|c|}{code}& \multicolumn{1}{|c|}{resisters} & \multicolumn{1}{|c|}{LUTs}& \multicolumn{1}{|c|}{Delay[ns]}& \multicolumn{1}{|c|}{cycles}\\ \hline 
          HW & 通常のRSA  &    1,441  & 11,721&   9.275  & 68,261 \\  
             & [太田2016] & 2,356     & 16,801 & 12.907 & 627,615 \\   
             & モンゴメリリダクション  & 2,662     & 11,464 & 9.480    & 680,284 \\   
             & モンゴメリリダクション+並列化 &    ---    &   ---  &    --- & --- \\   \hline
 MIPS & モンゴメリリダクション & 1,771     & 3,180  & 8.222 & 4,183,457 \\   \hline  
         \end{tabular}
       \end{center}
     \end{table}


  * アルゴリズムの変更前と変更後の回路規模実行速度を比較した. [太田2016]にモンゴメリリダクションを適用した場合, 回路規模は小さくなったが実行時間が増加した. モンゴメリリダクションと並列化の両方を適用した場合○○となる.
